<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $fortune_id
 * @property string $author
 * @property string $title
 * @property string $content
 * @property Fortune $Fortune
 * 
 * @method integer getFortuneId()  Returns the current record's "fortune_id" value
 * @method string  getAuthor()     Returns the current record's "author" value
 * @method string  getTitle()      Returns the current record's "title" value
 * @method string  getContent()    Returns the current record's "content" value
 * @method Fortune getFortune()    Returns the current record's "Fortune" value
 * @method Comment setFortuneId()  Sets the current record's "fortune_id" value
 * @method Comment setAuthor()     Sets the current record's "author" value
 * @method Comment setTitle()      Sets the current record's "title" value
 * @method Comment setContent()    Sets the current record's "content" value
 * @method Comment setFortune()    Sets the current record's "Fortune" value
 * 
 * @package    sftunes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('fortune_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('author', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', 5000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 5000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Fortune', array(
             'local' => 'fortune_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}